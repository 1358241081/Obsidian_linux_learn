#转义字符

与流行的看法相反, 使用原始的转义字符并不会出现问题. 使用`tput`抽象相同的ANSI序列，就像手动打印一样. 更糟糕的是，`tput`实际上并不是便携式的. 有许多`tput`变体，每个变体都有不同的命令和语法 (*尝试运行 `tput setaf 3` 在 FreeBSD 系统里*). 

##文本颜色

**NOTE:** 需要RGB值的序列仅适用于真彩色终端仿真器.

| 序列 | 它将做什么？ | 值 |
| -------- | ---------------- | ----- |
| `\e[38;5;<NUM>m` | 设置文本前景色. | `0-255`
| `\e[48;5;<NUM>m` | 设置文本背景颜色. | `0-255`
| `\e[38;2;<R>;<G>;<B>m` | 将文本前景色设置为RGB颜色. | `R`, `G`, `B`
| `\e[48;2;<R>;<G>;<B>m` | 将文本背景颜色设置为RGB颜色. | `R`, `G`, `B`

##文本属性

| 序列 | 它将做什么？ |
| -------- | ---------------- |
| `\e[m`  | 重置文本格式和颜色.
| `\e[1m` | 粗体. |
| `\e[2m` | 微弱的文字. |
| `\e[3m` | 斜体文字. |
| `\e[4m` | 下划线文字. |
| `\e[5m` | 慢速闪烁. |
| `\e[7m` | 交换前景色和背景色. |


##移动光标

| 序列 | 它将做什么？ | 值 |
| -------- | ---------------- | ----- |
| `\e[<LINE>;<COLUMN>H` | 将光标移动到绝对位置. | `line`, `column`
| `\e[H` | 将光标移动到原位 (`0,0`). |
| `\e[<NUM>A` | 将光标向上移动N行. | `num`
| `\e[<NUM>B` | 将光标向下移动N行. | `num`
| `\e[<NUM>C` | 将光标向右移动N列. | `num`
| `\e[<NUM>D` | 将光标向左移动N列. | `num`
| `\e[s` | 保存光标位置. |
| `\e[u` | 恢复光标位置. |


##删除文本

| 序列 | 它将做什么？ |
| -------- | ---------------- |
| `\e[K` | 从光标位置删除到行尾.
| `\e[1K` | 从光标位置删除到行首.
| `\e[2K` | 擦除整个当前行.
| `\e[J` | 从当前行删除到屏幕底部.
| `\e[1J` | 从当前行删除到屏幕顶部.
| `\e[2J` | 清除屏幕.
| `\e[2J\e[H` | 清除屏幕并将光标移动到 `0,0`.


<!-- CHAPTER END -->

