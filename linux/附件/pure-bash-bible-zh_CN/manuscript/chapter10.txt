
#条件表达式

##文件判断

| 表达式 | 值  | 它有什么作用？ |
| ---------- | ------ | ---------------- |
| `-a`       | `file` | 文件存在
| `-b`       | `file` | 文件存在并且是块特殊文件.
| `-c`       | `file` | 文件存在并且是字符特殊文件.
| `-d`       | `file` | 文件存在且是目录.
| `-e`       | `file` | 文件存在.
| `-f`       | `file` | 文件存在且是常规文件.
| `-g`       | `file` | 文件存在且其set-group-id位已设置.
| `-h`       | `file` | 文件存在并且是符号链接.
| `-k`       | `file` | 文件存在且其sticky-bit已设置
| `-p`       | `file` | 文件存在并且是命名管道 (*FIFO*).
| `-r`       | `file` | 文件存在且可读.
| `-s`       | `file` | 文件存在且其大小大于零.
| `-t`       | `fd`   | 文件描述符是打开的并且引用到一个终端.
| `-u`       | `file` | 文件存在且其set-user-id位已设置.
| `-w`       | `file` | 文件存在且可写.
| `-x`       | `file` | 文件存在且可执行.
| `-G`       | `file` | 文件存在且拥有者是一个有效组ID.
| `-L`       | `file` | 文件存在并且是符号链接.
| `-N`       | `file` | 文件存在且自上次读取后已被修改.
| `-O`       | `file` | 文件存在并且拥有者是一个有效用户ID.
| `-S`       | `file` | 文件存在且是套接字.

##文件比较

| 表达式 | 它有什么作用？ |
| ---------- | ---------------- |
| `file -ef file2` | 是否两个文件都引用相同的inode和设备编号.
| `file -nt file2` | 是否 `file` 比 `file2`更新 (*使用修改时间*) 或者 `file` 存在而 `file2` 不存在.
| `file -ot file2` | 是否 `file` 比 `file2`更老 (*使用修改时间*) 或者 `file2` 存在而 `file` 不存在.

##条件变量

| 表达式 | 值 | 它有什么作用？ |
| ---------- | ----- | ---------------- |
| `-o`       | `opt` | 是否启用了shell选项.
| `-v`       | `var` | 是否变量具有指定的值.
| `-R`       | `var` | 是否变量是一个名称引用.
| `-z`       | `var` | 是否字符串的长度为零.
| `-n`       | `var` | 是否字符串的长度不为零.

##比较变量

| 表达式 | 它有什么作用？ |
| ---------- | ---------------- |
| `var = var2` | 等于.
| `var == var2` | 等于 (*同义词 `=`*).
| `var != var2` | 不等于.
| `var < var2` | 小于 (*以ASCII字母顺序排列.*)
| `var > var2` | 大于 (*以ASCII字母顺序排列.*)

<!-- CHAPTER END -->

