#内部变量

##获取`bash`二进制文件的位置

```shell
"$BASH"
```

##获取当前运行`bash`命令的版本

```shell
# 作为字符串.
"$BASH_VERSION"

# 作为数组.
"${BASH_VERSINFO[@]}"
```

##打开用户默认的文本编辑器

```shell
"$EDITOR" "$file"

# NOTE: 这个变量可能是空的，设置一个失败调用值.
"${EDITOR:-vi}" "$file"
```

##获取当前函数的名称

```shell
# 当前函数.
"${FUNCNAME[0]}"

# 父函数.
"${FUNCNAME[1]}"

# 等等.
"${FUNCNAME[2]}"
"${FUNCNAME[3]}"

# 包括父类的所有函数
"${FUNCNAME[@]}"
```

##获取系统的主机名

```shell
"$HOSTNAME"

# NOTE: 这个变量可能是空的.
# (可选):将失败调用设置为hostname命令
"${HOSTNAME:-$(hostname)}"
```

##获取操作系统的架构（32位或64位）

```shell
"$HOSTTYPE"
```

##获取操作系统/内核的名称

这可用于条件判断不同的操作系统，而无需调用`uname`。

```shell
"$OSTYPE"
```

##获取当前的工作目录

这是内置`pwd`的替代方案。

```shell
"$PWD"
```

##获取脚本运行的秒数

```shell
"$SECONDS"
```

##获取伪随机整数

每次使用`$RANDOM`时, 返回`0` and `32767`之间的不同整数。 此变量不应用于与安全性相关的任何内容（包括加密密钥等）。


```shell
"$RANDOM"
```

<!-- CHAPTER END -->

